#base_global_planner: navfn/NavfnROS
base_global_planner: global_planner/GlobalPlanner
#base_global_planner: carrot_planner/CarrotPlanner

base_local_planner: dwa_local_planner/DWAPlannerROS
#base_local_planner: base_local_planner/TrajectoryPlannerROS
#base_local_planner: teb_local_planner/TebLocalPlannerROS

recovery_behavior_enabled: false



shutdown_costmaps: false

controller_frequency: 5.0
controller_patience: 3.0


planner_frequency: 1.0
planner_patience: 5.0

oscillation_timeout: 10.0
oscillation_distance: 0.2



TrajectoryPlannerROS:
  #Set the acceleration limits of the robot
  acc_lim_th: 0.7
  acc_lim_x: 0.5
  acc_lim_y: 0

  #Set the velocity limits of the robot
  max_vel_x: 0.4
  min_vel_x: 0.10
  max_vel_theta: 0.5
  min_vel_theta: -0.5
  max_rotational_vel: 1.0
  min_in_place_rotational_vel: 0.8
  min_in_place_vel_theta: 0.8

  #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.2

  #For this example, we'll use a holonomic robot
  holonomic_robot: false

  #Set the tolerance on achieving a goal
  xy_goal_tolerance: 0.1
  yaw_goal_tolerance: 0.1
  latch_xy_goal_tolerance: true

  #We'll configure how long and with what granularity we'll forward simulate trajectories
  sim_time: 1.5
  sim_granularity: 0.025
  angular_sim_granularity: 0.025
  vx_samples: 3
  vtheta_samples: 20
  controller_frequency: 1.0
  planner_frequency: 1.0

  #Parameters for scoring trajectories
  goal_distance_bias: 0.8
  path_distance_bias: 1.0
  occdist_scale: 0.01
  heading_lookahead: 0.325

  #We'll use the Dynamic Window Approach to control instead of Trajectory Rollout for this example
  dwa: false

  #How far the robot must travel before oscillation flags are reset
  oscillation_reset_dist: 0.05

  #Eat up the plan as the robot moves along it
  prune_plan: false


DWAPlannerROS:

# Robot Configuration Parameters - Kobuki
  max_vel_x: 0.40  # 0.55
  min_vel_x: -0.35 

  max_vel_y: 0.0  # diff drive robot
  min_vel_y: 0.0  # diff drive robot

  max_trans_vel: 0.1 # choose slightly less than the base's capability
  min_trans_vel: -0.1  # this is the min trans velocity when there is negligible rotational velocity
  trans_stopped_vel: 0.1

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_rot_vel: 0.8  # choose slightly less than the base's capability
  min_rot_vel: 0.5  # this is the min angular velocity when there is negligible translational velocity
  rot_stopped_vel: 1
  
  acc_lim_x: 1.0 # maximum is theoretically 2.0, but we 
  acc_lim_theta: 2.0
  acc_lim_y: 0.0      # diff drive robot

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.3  # 0.05
  xy_goal_tolerance: 0.3  # 0.10
  latch_xy_goal_tolerance: false

# Forward Simulation Parameters
  sim_time: 1.5       # 1.7
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 25       # 3
  vy_samples: 1       # diff drive robot, there is only one sample
  vtheta_samples: 30  # 20

# Trajectory Scoring Parameters
  path_distance_bias: 40.0     # 32.0   - weighting for how much it should stick to the global path plan
  goal_distance_bias: 0.8      # 24.0   - wighting for how much it should attempt to reach its goal
  occdist_scale: 0.10           # 0.01   - weighting for how much the controller should avoid obstacles
  forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
  stop_time_buffer: 0.2         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
  scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags

# Debugging
  publish_traj_pc : true
  publish_cost_grid_pc: true
  global_frame_id: map


# Differential-drive robot configuration - necessary?
  holonomic_robot: false
